apiVersion: batch/v1
kind: Job
metadata:
  name: ensure-gateway-cert
  namespace: argocd
  annotations:
    argocd.argoproj.io/hook: PreSync
spec:
  template:
    spec:
      serviceAccountName: argocd-application-controller
      restartPolicy: OnFailure
      containers:
      - name: cert-generator
        # ToDo: make this one of our images
        image: bitnamilegacy/kubectl:1.33.4-debian-12-r0
        env:
        - name: ORION_HOSTNAME
          value: "{{ .Values.host }}"
        - name: ORION_TLS_SECRET
          value: "{{ .Values.gateway.tlsSecretName }}"
        command:
          - /bin/bash
          - -c
          - |
            set -euo pipefail
            if [[ -z "${ORION_HOSTNAME}" ]]; then
              echo "ERROR: ORION_HOSTNAME is not set."
              exit 1
            fi

            if [[ -z "${ORION_TLS_SECRET}" ]]; then
              echo "ERROR: ORION_TLS_SECRET is not set."
              exit 1
            fi
            openssl req -x509 -nodes -days 365 \
              -newkey rsa:2048 \
              -keyout "/tmp/${ORION_HOSTNAME}.selfsigned.key" \
              -out "/tmp/${ORION_HOSTNAME}.selfsigned.crt" \
              -subj "/CN=${ORION_HOSTNAME}/O=ORION Self-Signed"

            echo "Checking if secret '${ORION_TLS_SECRET}' already exists..."
            if kubectl get secret "${ORION_TLS_SECRET}" -n argocd &> /dev/null; then
              echo "Secret '${ORION_TLS_SECRET}' already exists. Exiting gracefully."
              exit 0
            fi

            echo "Creating Kubernetes TLS secret '${ORION_TLS_SECRET}'..."
            kubectl create secret tls "${ORION_TLS_SECRET}" \
              --key="/tmp/${ORION_HOSTNAME}.selfsigned.key" \
              --cert="/tmp/${ORION_HOSTNAME}.selfsigned.crt" \
              -n argocd
